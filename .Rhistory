# Import the Data from CSV Files
df1 <- read.csv("Lingfield_AW_2014_2024_flat.csv")
df2 <- read.csv("Lingfield_AW_2014_2024_jumps.csv")
df3 <- read.csv("Lingfield_turf_2014_2024_flat.csv")
df4 <- read.csv("Lingfield_turf_2014_2024_jumps.csv")
df.horse <- rbind(df1, df2, df3, df4)
# Import the Data from CSV Files
df1 <- read.csv("Lingfield_AW_2014_2024_flat.csv")
df2 <- read.csv("Lingfield_AW_2014_2024_jumps.csv")
df3 <- read.csv("Lingfield_turf_2014_2024_flat.csv")
df4 <- read.csv("Lingfield_turf_2014_2024_jumps.csv")
df.horse <- rbind(df1, df2, df3, df4)
df.horse <- subset(df.horse, select=c(date, race_name,type, class, dist_m, going, ran, pos, draw, horse, age, sex, lbs, hg, secs, jockey, trainer, prize))
df.horse$won <- ifelse(df.horse$pos == 1, 1, 0)
# Check the first few rows to ensure the new column has been added
head(df.horse[c("pos","won")],50)
# => looks good
colSums(is.na(df.horse) | df.horse == "")
# let's drop hg and prize because most of them are missing
# but let's keep draw because AFAIK it might influence outcome
# keep it in mind that it only exists for Flat course type
df.horse <- subset(df.horse, select=-c(hg,prize))
str(df.horse)
df.horse$date <- as.Date(as.character(df.horse$date), format = "%Y-%m-%d")
# Convert all character columns to factors
df.horse[sapply(df.horse, is.character)] <- lapply(df.horse[sapply(df.horse, is.character)], as.factor)
# df.horse$race_name <- as.character(df.horse$race_name)
df.horse$pos <- as.integer(as.character(df.horse$pos))
# Convert secs to numeric after handling non-numeric values
df.horse$secs <- as.numeric(as.character(df.horse$secs))
colSums(is.na(df.horse) | df.horse == "")
str(df.horse)
# Log-transforming 'dist_m', 'lbs', and 'secs'
df.horse$log_dist_m <- log(df.horse$dist_m)
df.horse$log_lbs <- log(df.horse$lbs)
df.horse$log_secs <- log(df.horse$secs)
plot(df.horse$log_dist_m)
# Sample 10% of the dataset for testing
df.horse_sample <- df.horse[sample(nrow(df.horse), 0.1 * nrow(df.horse)), ]
dim(df.horse_sample)
glm.horse_sample <- glm(won ~ type + log_dist_m + going + age + sex + log_lbs + log_secs,
data = df.horse_sample,
family = "binomial")
summary(glm.horse_sample)
